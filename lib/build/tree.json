[{"type":"file","name":"01 Overview","children":null,"path":"../..//01 Overview.md","content":"## Team Introduction\n\nLet's consider a company, used to sell their product through the super market. Now they want to set up a e-commerce solution, where they wan to sell the product directly to the consumer.\n\nSo they hire a team, along with a `scrum-master`, programmer, engineer, tester and marketing persons.\n\n### Agile Manifesto\n\nThe values and ideas of `Agile Manifesto` is derived from couple of broader range of frameworks, like\n\n- SCRUM\n- KANBAN\n- CRYSTAL\n- EXTREME PROGRAMMING\n\n`Agile Manifesto` uncovering better ways of developing software by\n\n- Doing it\n- Helping others do it\n\n`Agile Manifesto` values,\n\n- Both `Individuals` and `Interactions` over processes and tools. This implies that, `skilled` and `committed` people working together toward a common goal.\n- Working software over comprehensive documentation. This implies, primary focus is to build a working product\n- Customer collaboration over contract negotiation. This implies, between customer and producer, we do not want only the contract and the lawyers. We want,\n  - Building a trust\n  - A workable relationship\n  - Shared goal\n- Responding to change over following a plan. This brings the adaption and flexibility.\n\n> Although the Agile manifesto ideas are almost 20 years old, It not only applicable to the software development but other categories of products.\n\n### History\n\n- SCRUM used to use to the product development papers since 1986\n- Ken Schwaber and James Sutherland publish scrum framework 1995\n- Agile Manifesto was was first written back on 2001\n\n### SCRUM\n\nSCRUM is a framework for dealing complex product. Now-a-days, constant market condition changing and technological improvements, gives us higher level of uncertainty. With this uncertainty, it is impossible to predict how a product should be developed. In simpler term, we can not predict future and absolutely have no clue what can be customer requirements six months later after the product being developed. Spent six months to plan for a product and spent another 2 years to develop the product does not work anymore.\n\nSo to create a product with market value, we have to work with time box and adapt with new changes.\n\nWith these requirements, SCRUM provides,\n\n✅ Time boxes\n✅ Feedback loops\n✅ Dealing with uncertainty\n\n### Sprint\n\nA Sprint combines combines all the aspects of work, required to build a product. This provide output of working, tested and potentially shippable product, even though it might not be delivered to the end users.\n\nAfter a `sprint`, the team demonstrate what they have accomplished and what to do next. This short iterations allow constant feedback and considerably increase the probability of creating right product.\n\n**SCRUM Team**\n\nA SCRUM team consists of\n\n- SCRUM Master\n- Product Owner\n- Developers\n\n**Product Owner :** Created the list of features called, `Product Backlog`. This backlog list is organized in such a way, so the customer can get maximum value.\n\n**Sprint Planning :** During the spring planning, the developers will select top items from the backlog list. A sprint can not be longer than one month. The team do a collaboration daily called `SCRUM Meeting`. `SCRUM Meeting` is responsible for synchronize, identify problem and move forward.\n\nAt the end of the `SCRUM`, the product should be potentially shippable. The `SCRUM Team` along with the stakeholders, conduct a review on what is completed and what to do next.\n\nThe last event of the `Sprint` is to do the `Retrospective`. It involves, how the spring went and figured out improving development process.\n\nThen the team plan for next sprint and cycle begin again.\n"},{"type":"file","name":"02 Artifacts","children":null,"path":"../..//02 Artifacts.md","content":"# Artifacts\n\n## Overview\n\n---\n\nAccording to the Scrum Guide, there are 3 artifacts,\n\n1. Product Backlog\n2. Sprint Backlog\n3. Increment, aka Product Increment\n\nArtifacts in SCRUM represents, `Work` or `Value`.\n\nWith `Artifacts`, SCRUM provides,\n\n- Transparency\n- Inspection\n- Adaptation\n\nSCRUM uses many terms, we do not use in our day to day conversation.\n\nEach of the 3 SCRUM `Artifacts` has commitment towards something.\n\n- `Product Backlog` exists to provide a long term objective, the `Product Goal`\n- `Spring Backlog` exists to provide the `Spring Goal`\n- `Increment` is committed to fulfill the `Definition of Done`, means the desired quality a product should have\n\nHere the `Commitment` stands for\n\n- Dedication to achieve the goal\n- Why the work is important\n- What is the desired outcome\n\n## Product Backlog\n\n---\n\nA product is something that customers use and get benefited. It could be a computer, vaccine or even a space-ship.\n\nWith computer customer can do calculation, with vaccine people make antibody and with space-ship, it is possible to travel space.\n\nWith SCRUM terminology these output or benefits from product is called the value.\n\nBacklog stands for list of unfinished work.\n\nFor example, if we plan for a tour, we have a list\n\n- Finalize the destination\n- Book hotels\n- Buy tickets\n- Take leaves, etc\n\nBefore tour, none of the items are done, and the are the backlog.\n\nNow we can not book tickets before the leave is confirmed. It's a risk. It will be a collision if we book tickets and can not take the leaves.\n\nAgain, we can not buy ticket or book hotel before select the destination.\n\nSo the order should be,\n\n- Take leaves\n- Select destination\n- Buy Tickets\n- Book Hotels\n\nNow, let's say, for tour destination and tour planning, we want to relay on a travel group. The tour group has multiple locations and plan for the tour. Here comes the **Transparency**. The tour group needs to know, you want a relax tour or adventure one. You prefer the sea or the mountain.\n\nWith these preference criteria, it is helpful for the tour group to provide a very good package.\n\nThe process of looking and observing all the plans aka `Backlog` is called **Inspection**.\n\nWith **Adaptation**, if we see something is wrong, missing or unclear we can change it.\n\nWith the **Inspection** and **Adaptation** SCRUM is continuously improved and it is called **Refinement**. This can be done by Q/A and adding things thats need to be done.\n\nA product backlog item can be,\n\n- Features\n- Improvement\n- Fixing\n\nEach product backlog item can contain,\n\n- Description\n- Order\n- Size\n- Value\n- Acceptance Criteria\n\nProduct owner is the responsible person for product backlog.\n\nProduct backlog is created on the objective of how the product should achieve. The product owner collaborate with the stakeholders to understand the business requirement, analysis the markets. There should be only one product goal at a time.\n\nAdding product backlog is an ongoing process. The product owner is responsible for add, update or remove product backlog any time wants. This make the product owner work closely with the developers. With product refinement, the product owner help the developers to break down the backlog into smaller task with details, size and order.\n\n**Sizing** is the estimation, developer is responsible of.\n\nTo reduce complexity, often the product owner and developer make the tradeoffs. And this is not the part of the SCRUM. The SCRUM team decides when and how the refinement should happen.\n\nThis is why the product backlog is never completed and always changing.\n\nThe top backlog items should be\n\n- Fit for the sprint\n- Immediately actionable\n- SCRUM team agree to make it done\n\n### Real World Example: Product Goal and Product Backlog\n\nLet's say we want to make a tour app that will display the events off upcoming tours of various tour group.\n\nFirst the `Product Owner` define the goal and create the backlog.\n\n**Product Goal:** Help 1000 tourist to find their next team.\n\n**Product Backlog:**\n\n- List of upcoming events\n- List of tour groups\n- Gather all the tour groups information available out there\n  - Facebook page\n  - Facebook group\n  - Corresponding persons\n- Easy Search and filter functionality of\n  - Groups\n  - Events\n    - By group\n    - By place\n    - By area\n    - By budget\n- Continuously gather all the events\n  - Place\n  - Group\n  - Page\n  - Budget\n  - Date\n\n### User Stories\n\nWhen the product owner added the product backlog, it do not mean a lot. To make sense, the product owner work closely with the developers and put necessary details.\n\nFrom product backlog, the `Product Owner`, `SCRUM Master` and `Developers` generate the `Backlog Item` with\n\n- Description\n- Order\n- Size\n- Value\n- Acceptance Criteria\n\nThe SCRUM guide itself, does not provide any template or recommendation, how a `Backlog Item` should be. It is very common to use the `User Stories` as `Backlog Item`. It is so common, the `Backlog Item` itself often refer as the `User Stories`.\n\nIn `User Stories`, commonly we put a short description, from a product user perspective, who desired the functionality.\n\nWhile writing a users stories, we go though a 3 step process, also known as 3 C's,\n\n- Card\n- Conversation\n- Confirmation\n\n**Card:** In the card, we usually refer a stories as followings\n\n> As a **< USER ROLE >**, I want **< SOME OBJECTIVE >**, so that **< SOME OUTCOME >**.\n\nHere the\n\n- `User Role` is the `WHO`\n- `Some Objective` is the `WHAT`\n- `Some Outcome` or benefit is the `WHY`\n\n**Conversation:** It's like reminder what need to done. It should be brief to the point.\n\n**Confirmation:** This determine the acceptance criteria.It's a way to test if the story is being completed.\n\nThe story does not always have to be the 3 C's. It should be decided by the SCRUM team which format works best. Ans yes, it is okay to use different story format in single project.\n\nEven `User Stories` are not a mandatory part of the SCRUM.\n\n### Real World Example: User Stories\n\nWe had a product backlog\n\n> List of upcoming events\n\nWe can transform this as a User stories as followings\n\nStory: As a customer, I want to see the list of upcoming tour events, so I can choose one and contact.\n\nDescription: The is the core feature. For each tour group, there should be list of events be entry into system. The customer will come and select one from them.\n\nAcceptance Criteria:\n\n- In the app, there should be list of events\n\n### Planning Poker\n\nHumans mind is more trained in comparing rather than measuring. With this context, In SCRUM for backlog items, instead of estimation, we are using the sizing terms.\n\nFor example, let's consider climbing a mountain. If this is a small hill, we consider the size 0 and for Everest it will be 100.\n\nEach developer will put a number between 1 to 100 for a backlog item. Then will be a brief discussion specially the highest and lowest scoring. This points the complexity and possibly the effective solution.\n\nThe initial sizing may have big difference between developes, but with brief discussion and repeat the precess, it is possible to come up a fixed sizing.\n\nEven with the discussion, we can reduce or change some objectives of the backlog, as long as the SPRINT Goal and the Product Goal is consistent.\n\nThis method is referred as `Planning Poker`.\n\n### Adding Value To Product Backlog\n\nAlong with the developers put the backlog estimation, the product owner need to put the backlog value as well. SCRUM mandates, each product backlog should have a value. I can be done by creating a simple value scale. In the scale, you can add multiple values starting from 100 to 1000. When we have different product backlog items, we can arranged them base on perceived values on the scale. And using the scale we can assign each product backlog items the value as expected.\n\n## Spring Backlog\n\n---\n\nDuring the `Spring` planning meeting, the `Product Owner` what needs to be done to increase the product values. By collaborating with the `Product Owner`, the developers will decide, which items of the top list of `Product Backlog`, should be added to the `Spring Backlog`.\n\nThe `Sprint Backlog` has a `Sprint Goal` to deliver the `Product Value Increment`.\n\nSince the developers are accountable for the `Sprint Backlog`, even the `Product Owner` can not change the `Sprint Backlog` without collaborating the developers.\n\nEach `Spring Backlog Item` comes from the decomposition of the `Product Backlog Items`.\n\nIn a `Sprint`,\n\n- `Sprint Backlog Items` or tasks are `What To Do`\n- `Spring Plan` is `How To Do`\n- `Spring Goal` is `Why To Do`\n\nAny unfinished work from the `Sprint Backlog` will be goes back to the `Product Backlog`.\n\n### Sprint Scope vs Sprint Goal\n\n---\n\nDuring a Sprint, the `Sprint Scope` can be changed, but we can not change the `Sprint Goal`.\n\nLet's go for an example. Let's say we are going for a trip in the next weekend. We are spent the whole weekend in the sea beach. Now, to do this, we have to do the packing, purchase train ticket and book a hotel. But due to some emergency, we may have to use bus as transport instead of bus and have to purchase bus ticket. See, here we are going to the beach for weekend with bus not by train.\n\nSo here,\n\n- Packing\n- Purchase ticket\n- Book hotel\n\nAre considered as the `Spring Scope`, but spending weekend in the sea beach is `Spring Goal`.\n\nTo meet the `Spring Goal`, we may make compromise in terms of the features but not the quality.\n\n## Product Increment\n\n---\n\n`Product Increment` is\n\n- A new version of product\n- Additive to all previous increments from all the previous `Sprints`.\n- Should be useable without needing any additional work\n\nThe commitment of `Product Increment` is `Definition of Done`. For `Definition of Done`, let's do an example,\n\nIn our app, as tourists, we want to display a list of upcoming events so they can contact the event host and join the event.\n\nWhen we convert this `Product Backlog` into `Sprint Backlog`, it will be\n\n- Show list of events\n- User can select and get the contact information of the event host\n\nNow, after completed the `Sprint Backlog`, if we missing the feature of adding event host contact information or do not show them, then, it is not completed aka does not meet the criteria of `Definition Of Done`.\n\nA sample of `Definition of Done` can be,\n\n- The acceptance criteria defined must meet\n- Code should be reviewed by at least 2 independent developers\n- Technical document should be written and reviewed\n- Unit test must be written and passed\n- Cross browser testing should be done at least 2 version with mobile view\n- Accessability test passing\n- Continuous Integration test passing\n- Non functional test\n  - Operation should be performed within certain defined time frame\n  - Should support certain defined con-current users\n  - Should check security vulnerabilities\n\nThe more experience the `Sprint Team` will be, the more strict rule should be in the `Definition of Done`. In the `Sprint Retrospective`, the team will discuss, how can increase the product quality aka the `Definition of Done`.\n\nIn this case, whenever a `Product Backlog Item` meets the `Definition of Done`, a new `Product Increment` happen.\n\nSCRUM only describe, there should be a `Definition Of Done` during the `Sprint Planning`. It does not define, when or what should be the `Definition Of Done`. The ideal time to update or refine the `Definition of Done` can be the `Sprint Retrospective`.\n\n### Definition of Done vs Acceptance Criteria\n\n| Definition of Done                             | Acceptance Criteria                 |\n| ---------------------------------------------- | ----------------------------------- |\n| Applicable to all the PBI                      | Applicable for a single PBI         |\n| Should perform and committed Product Increment | Might not perform Product Increment |\n| Created By SCRUM TEAM                          | Created by the developer            |\n| Mandatory option for SCRUM                     | Optional in SCRUM                   |\n\n## Summary of Artifacts\n\n`Product Owner` create the `Product Goal` and `Product Backlog`. Developers pick the `PBI` and plan for the Sprint with `Product Owner`. From `PBI`, developers are accountable for creating `SBI` and a SPRINT should have a `Spring Goal`. These `SBI` is forecasted, as `PBI` and `SBI` as both changes over time. When the Sprint is completed by the `Definition of Done`, then there should happen a `Product Increment`.\n\nHere, `SCRUM Master` is responsible for ensuring the `EMPIRICISM`\n\n- Transparency\n- Inspection\n- Adaptation\n"},{"type":"file","name":"03 SCRUM Events","children":null,"path":"../..//03 SCRUM Events.md","content":"# SCRUM Events\n\n`Sprint` is the heart of the `SCRUM` and the `Sprint` is the container of all the SCRUM events. `SCRUM Event` is mandatory and SCRUM team can not simply decide to skip the events. To reduce the complexity, the `SCRUM Events` should happen same time and place.\n\nThe `Sprint` contains the following `SCRUM Events`\n\n- Spring Planning\n- Daily SCRUM\n- Sprint Review\n- Sprint Retrospective\n\nAll these events,\n\n- Are included inside a time frame\n- Provide the `Transparency` and `Inspection`\n\nThe SCRUM team is not only bound by the events, the team can held other meetings whenever necessary. For example, the `Product Backlog Refinement` meeting is not included into the `SCRUM Events`.\n\n### Time Box\n\n---\n\n`Time Box` force to focus on the most import tasks.\n\nFor `SCRUM Event` time box is very strict frame. For a `Sprint` like 1 month, the maximum time for `Sprint Planning` event is 8 hours or less. It can not exceed the 8 hours time frame.\n\nExcept the `Sprint` itself, time frame can be closed earlier. For `Sprint`, even though the `Sprint Backlog Item` closed earlier, the `Sprint` does not close before the `Sprint` time frame.\n\nFor example, for a tour, we may take half of the day for do the packing. `Sprint Time Box` suggest to do it in compact time frame, for example in 1 hour. It is possible we might forget to pack the tooth-brash. We buy the tooth-brash from somewhere, but it saves from bigger risk, miss the flight.\n\n### The Sprint\n\n---\n\nTypically a `Sprint` length is one month or less. The naming can be confused with `Sprint Race`, by putt all the energy in a `Sprint`. But in `SCRUM Sprint`, the development work must be performed in a sustainable peace, `Sprint` after `Sprint`.\n\nInstead of planning for a year, to reduce the complexity, risk and adaptation, its better to plan a short period and re-evaluated time to time.\n\nSprint allows the `Product Backlog Refinement` activity and other relevant meetings.\n\nDuring a `Sprint`, the `Sprint Scope` can be clarified and re-negotiated, without\n\n- Making any changes that may endanger the `Sprint Goal`\n- Decrease the `Quality Standards`\n\nDuration of the `Sprint` should not be changed during or after `Sprint`. The `Sprint Scopes` that does not meet the `Definition of Done`, must be go back to the `Product Backlog`.\n\n### Sprint Planning\n\n---\n\nIt is the first event of the `Sprint`, best to held same time and place. For a `Sprint` that length is 1 month, the `Sprint Planning` should be 8 hours long. For the smaller length of `Sprint`, the `Sprint Planning` time should be less.\n\nIt is not necessary to happen the `Sprint Retrospective` and `Sprint Planning` happening in the same day. The `Spring Retrospective` belongs to the previous `Sprint` and the `Sprint Planning` belongs to the current `Sprint`.\n\nIt is important to consider, the `Sprint` should never be delayed in any circumstance.\n\nThe `Spring Planning` describe\n\n- WHY the Sprint is valuable\n- WHAT needs to be done during the Sprint\n- HOW the work will be done\n"}]